# This is a basic workflow to help you get started with Actions

name: CI back end

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: 
      - master
      - develop
    paths-ignore:
      - 'FrontEnd/**'
  pull_request:
    branches:
      - master
      - develop
    paths-ignore:
      - 'FrontEnd/**'

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
    inputs:
      target-env:
        required: true
        type: string

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest        
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
      
      # Runs a set of commands using the runners shell
      - name: Run a multi-line script
        run: |
          echo ${{ github.ref }}
          echo ${{ github.ref }}
          echo $TARGET_ENV
          echo ${{ github.workspace }}
  deploy:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    needs: build
    env:
      TARGET_ENV: Staging
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
       
      - name: Run a multi-line script
        run: |
          echo ${{ github.ref }}
          echo $TARGET_ENV
                  
        if: ${{ github.ref == 'refs/heads/develop' }}
      - uses: ./.github/workflows/actions
        with:
            target-env: $TARGET_ENV
            
        if: ${{ github.ref == 'refs/heads/main' }}                
      - uses: ./.github/workflows/actions
        with:
            target-env: $TARGET_ENV
   
        
     
          
  
